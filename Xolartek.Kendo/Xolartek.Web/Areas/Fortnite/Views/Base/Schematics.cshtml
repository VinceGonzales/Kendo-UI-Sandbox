@using Xolartek.Web.Fortnite.Models
@{
    Layout = "~/Areas/Fortnite/Views/Shared/_Layoutv2013.cshtml";
    ViewBag.Title = "Index";
}
@section header {

}
<div class="container">
    <div class="row">
        <div class="col-md-12"><h4>Fortnite</h4></div>
    </div>
    <div class="row">
        <div class="col-md-6">
            @(Html.Kendo().DropDownList()
                .Name("schematicType")
                .OptionLabel(" ")
                .DataTextField("Description")
                .DataValueField("Id")
                .BindTo((ViewData["WeaponTypes"] as List<Xolartek.Core.Fortnite.WeaponType>))
                .HtmlAttributes(new { style = "width: 50%" })
            )<br/><br />
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            @(Html.Kendo().Grid<SchematicVM>().Name("Schematics")
                    .Columns(columns =>
                    {
                        columns.Bound(p => p.imgurl).Title(" ").ClientTemplate(@"<img src='" + @Url.Content("#:data.imgurl#") + "' style='width:80px;' />").Width(80);
                        columns.Bound(p => p.name).Title("Name").Width(80);
                        columns.Bound(p => p.level).Title("Level").Width(80);
                        columns.Bound(p => p.stars).ClientTemplate("#=StarLabel(data.stars)#").Width(80);
                    })
                    .HtmlAttributes(new { style = "height: 500px;" })
                    .Sortable()
                    .Selectable(s => s.Mode(GridSelectionMode.Single))
                    .Scrollable(s => s.Height("auto"))
                    .DataSource(dataSource => dataSource
                        .Ajax()
                        .Model(model => model.Id(a => a.id))
                        .Read(read => read.Action("LoadSchematicList", "Base", Model))
                    )
                    .Events(e => e.Change("onGridChange"))
            )
        </div>
        <div class="col-md-6"><div id="pnlGrid"></div></div>
    </div>
</div>
@section scripts {
<script>
var statDTO = {
    id: { type: "number" },
    name: { type: "string" },
    value: { type: "string" }
};
var statModel = kendo.data.Model.define({ id: "id", fields: statDTO });
function StarLabel(data) {
    var result = '';
    for(var i=0;i<data;i++) {
        result += "<span class='k-icon k-i-custom'></span>";
    }
    return result;
}
function onGridChange(e) {
    var grid = e.sender;
    var selected = $.map(this.select(), function (item) {
        return grid.dataItem(item);
    });
    var apiUrl = "http://localhost:50090/api/fortnite/schematic/" + selected[0].id;
    window.dsStats = new kendo.data.DataSource({
        autoSync: true,
        transport: {
            read: { dataType: "json", type: "get", url: apiUrl }
        },
        schema: { data: "stat", model: statModel }
    });
    $("#pnlGrid").kendoGrid({
        dataSource: dsStats,
        columns: [
            { width: 80, field: "id", title: " ", hidden: true },
            { width: 80, field: "value", title: "Impact" },
            { width: 80, field: "name", title: "Description" }
        ],
        height: 500
    });
}
</script>
}
